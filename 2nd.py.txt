#!/usr/bin/env python
# coding: utf-8

# In[1]:


import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np


# In[2]:


df = pd.read_csv('temperatures.csv')
df.head()


# In[3]:


x = df[['YEAR']]
y = df[['JAN']]


# In[4]:


#plt.figure(figsize=(16,9))
plt.title('Temperature Plot')
plt.xlabel('Year')
plt.ylabel('Jan')
plt.scatter(x,y)


# In[5]:


from sklearn.model_selection import train_test_split
x_tr, x_te, y_tr, y_te = train_test_split(x, y, test_size=0.2, random_state=1)


# In[6]:


x_tr.shape


# In[7]:


from sklearn.linear_model import LinearRegression
reg = LinearRegression()


# In[8]:


model = reg.fit(x_tr, y_tr)
y_pred = model.predict(x_te)


# In[9]:


print(model.coef_)


# In[10]:


model.intercept_


# In[11]:


print(f'''
Actual {y_te}

pred : {y_pred}

{y_te - y_pred}
''')


# In[28]:


plt.scatter(x_tr, y_tr, label="Actual", color='r')
plt.plot(x_tr, reg.predict(x_tr), label="Predicted")
plt.xlabel("Year")
plt.ylabel("Temp")
plt.legend()
plt.show()
#do same for test


# In[22]:


from sklearn.metrics import mean_squared_error, mean_absolute_error
from sklearn.metrics import r2_score


# In[24]:


print(f'Mean {mean_squared_error(y_te, y_pred)}')
print(f'MSE {mean_absolute_error(y_te, y_pred)}')
print(f'Root mean : {np.sqrt(mean_squared_error(y_te, y_pred))}')
print(f'R2 Score : {r2_score(y_te, y_pred)}')


# In[21]:


model.predict([[2030]])


# In[29]:


sns.regplot(x='YEAR', y='JAN', data=df)


# In[ ]:




